scalar Upload

type Group {
    id: ID!
    name: String!
    teacherName: String!
    level: GroupLevel!
    start_at:String!
    started_date:String!
    days_week:DaysWeek!
    createdAt: String!
}

enum DaysWeek{
    EVEN_DAYS,
    ODD_DAYS,
    CUSTOM
}

enum GroupLevel {
    BEGINNER
    ELEMENTARY
    PRE_INTERMEDIATE
    INTERMEDIATE
    UPPER_INTERMEDIATE
    ADVANCED
    PROFICIENT
}

type Response {
    statusCode: Int!
    message: String!
}

type Collection {
    id :ID!
    title :String!
    questions: String!
    createdAt:String!
}

type AnswerField{
    studentAnswer:String
    trueAnswer:String!
    isTrue:Boolean
}

type UserCollectionTestExams {
    collectionId:ID!
    answerField:[AnswerField]!
    requestGroup:[Group]
    trueCount:Int
    falseCount:Int
    createdAt:String!
}

type Student{
    fullName:String!
    phoneNumber:String!
    id:ID!
}

type Query {
    getGroups(code:String!, byId: ID, orderByLevel: Boolean , page:Int , size:Int): [Group!]
    getCollection:[Collection!]!
    getCollectionById(collectionId:ID!):Collection!
    getCollectionActive:Collection!
    getStudentTestExams(code:String, studentId:ID , page:Int , size:Int):[UserCollectionTestExams!]!
    getStudentsList(code:String!,page:Int , size:Int):[Student]
}


type Mutation {
    createCollection(code:String!, name: String!, file: Upload!): Response!
    updateCollectionActive(code:String! , collectionId:ID! ): Response!
    deleteCollection(code:String! , id: ID!): Response!
    createGroup(code:String!, name: String!, teacherName: String!, level: GroupLevel!, startAt:String!,startDate:String!,daysWeek:DaysWeek!): Response!
    updateGroup(code:String!,id: ID!, name: String!, teacherName: String!, level: GroupLevel! , startAt:String!,startDate:String!,daysWeek:DaysWeek!): Response!
    deleteGroup(code:String!,id: ID!): Response!
    createAnswer(code:String!,collectionId:ID! , answers:[String]! , isUpdated:Boolean):Response!
    deleteAnswer(code:String!,collectionId:ID!):Response!
    createStudentAnswer(collectionId:ID! , answers:[String]! , code:String!):Response!
}
